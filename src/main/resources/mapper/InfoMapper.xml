<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.breeze.breezevideouser.mapper.InfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.breeze.breezevideouser.domain.Info">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="runtime" property="runtime" />
        <result column="type" property="type" />
        <result column="release_date" property="releaseDate" />
        <result column="intro" property="intro" />
        <result column="director" property="director" />
        <result column="writer" property="writer" />
        <result column="star" property="star" />
        <result column="budget" property="budget" />
        <result column="revenue" property="revenue" />
        <result column="language" property="language" />
        <result column="company" property="company" />
        <result column="country" property="country" />
        <result column="rating" property="rating" />
        <result column="rating_num" property="ratingNum" />
        <result column="tag" property="tag" />
        <result column="imdb_id" property="imdbId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, runtime, type, release_date, intro, director, writer, star, budget, revenue, language, company, country, rating, rating_num, tag, imdb_id
    </sql>

    <select id="getAllBanner" resultType="com.breeze.breezevideouser.domain.vo.InfoVo">
        SELECT
            i.id,
            i.name,
            i.runtime,
            i.type,
            i.release_date,
            i.intro,
            i.director,
            i.writer,
            i.star,
            i.budget,
            i.revenue,
            i.language,
            i.company,
            i.country,
            i.rating,
            i.rating_num,
            i.tag,
            i.imdb_id,
            s3.movie_id,
            MAX(CASE WHEN s3.object_name LIKE 'poster%' THEN s3.object_name ELSE NULL END) AS poster_url,
            MAX(CASE WHEN s3.object_name LIKE 'trailer%' THEN s3.object_name ELSE NULL END) AS trailer_url
        FROM
            banner
                INNER JOIN info i ON banner.movie_id = i.id
                INNER JOIN s3 ON banner.movie_id = s3.movie_id
        GROUP BY
            i.id,
            i.name,
            i.runtime,
            i.type,
            i.release_date,
            i.intro,
            i.director,
            i.writer,
            i.star,
            i.budget,
            i.revenue,
            i.language,
            i.company,
            i.country,
            i.rating,
            i.rating_num,
            i.tag,
            i.imdb_id,
            s3.movie_id
    </select>

</mapper>
